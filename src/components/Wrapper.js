'use client';

import React, { useReducer, useContext } from 'react';
import Head from 'next/head';
import Link from 'next/link';
import { Store } from '../../utils/Store';

export default function Wrapper({ title, children }) {
  const { state, dispatch } = useContext(Store);
  const { cart } = state;

  return (
    <>
      <Head>
        <title>{title ? title : ''}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div>
        <header className="sticky top-0 z-50 fixed">
          <nav className="flex h-24 place-items-center md:justify-between shadow-sm md:px-4 w-full">
            <div className="w-1/3">
              <Link href="/">
                <p className="text-xs hidden md:flex px-2">SHOP</p>
              </Link>
            </div>
            <div className="w-full md:hidden p-0">
              <button className="primary-button border gray-800 rounded px-0 py-0 text-center mr-0 mb-0 my-0">
                ☰
              </button>
            </div>
            <div className="w-full md:w-1/3 text-center">
              <Link href="/">
                <p className="text-xs md:text-3xl font-bold">
                  threadbare ʕ•́ᴥ•̀ʔっ
                </p>
              </Link>
            </div>
            <div className="flex w-1/3 justify-end">
              <Link href="/checkout">
                <p className="md:px-2 hidden md:flex  text-xs">SEARCH</p>
              </Link>
              <Link href="/cart">
                <p className="md:px-2 hidden md:flex text-xs">
                  CART
                  {cart.cartItems.length > 0 && (
                    <span className="text-xs text-white bg-black rounded-full px-1">
                      {cart.cartItems.reduce((a, x) => a + x.quantity, 0)}
                    </span>
                  )}
                </p>
              </Link>
              <Link href="/checkout">
                <p className="md:px-2 hidden md:flex text-xs">LOGIN</p>
              </Link>
            </div>
          </nav>
        </header>
        {title != '404' && (
          <main className="container m-auto mt-4 px-4">{children}</main>
        )}
        {title === '404' && (
          <main className="grid place-items-center text-center h-screen">
            {children}
          </main>
        )}
        <footer className="flex justify-center items-center py-2 shadow-inner">
          <div>ʕ•́ᴥ•̀ʔっ♡</div>
        </footer>
      </div>
    </>
  );
}
