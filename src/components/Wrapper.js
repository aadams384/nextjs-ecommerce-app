import React, { useReducer, useContext, useState, useEffect } from 'react';
import Head from 'next/head';
import Link from 'next/link';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { Store } from '../../utils/Store';
import { signOut, useSession } from 'next-auth/react';
import { Menu } from '@headlessui/react';
import DropdownLink from './DropdownLink';
import Cookies from 'js-cookie';
import { useRouter } from 'next/router';

export default function Wrapper({ title, children }) {
  const { status, data: session } = useSession();

  const { state, dispatch } = useContext(Store);
  const { cart } = state;
  const [cartItemsCount, setCartItemsCount] = useState(0);
  useEffect(() => {
    setCartItemsCount(cart.cartItems.reduce((a, c) => a + c.quantity, 0));
  }, [cart.cartItems]);

  const handleLogout = () => {
    Cookies.remove('cart');
    dispatch({ type: 'CART_CLEAR' });
    signOut();
  };

  return (
    <>
      <Head>
        <title>{title ? title : ''}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <ToastContainer position="bottom-center" limit={1} />

      <div>
        <header className="sticky top-0 z-50 fixed">
          <nav className="flex h-24 place-items-center md:justify-between shadow-sm md:px-4 w-full">
            <div className="w-1/3">
              <Link href="/">
                <p className="text-xs hidden md:flex px-2">SHOP</p>
              </Link>
            </div>
            <div className="w-full md:hidden p-0">
              <button className="primary-button border gray-800 rounded px-0 py-0 text-center mr-0 mb-0 my-0">
                ☰
              </button>
            </div>
            <div className="w-full md:w-1/3 text-center">
              <Link href="/">
                <p className="text-xs md:text-3xl font-bold">
                  threadbare ʕ•́ᴥ•̀ʔっ
                </p>
              </Link>
            </div>
            <div className="flex w-1/3 justify-end items-center">
              <Link href="/checkout">
                <p className="md:px-2 hidden md:flex text-xs">SEARCH</p>
              </Link>
              <Link href="/cart">
                <p className="md:px-2 hidden md:flex text-xs">
                  CART
                  {cartItemsCount > 0 && (
                    <span className=" relative-flex text-xs text-white bg-black rounded-full px-1">
                      {cartItemsCount}
                    </span>
                  )}
                </p>
              </Link>
              {status === 'loading' ? (
                'Loading'
              ) : session?.user ? (
                <Menu className="relative flex items-center" as="div">
                  <Menu.Button className="primary-button hidden md:inline-block border rounded-full">
                    <span>{session.user.name.charAt(0).toUpperCase()}</span>
                  </Menu.Button>
                  <Menu.Items className="absolute right-2 top-16 w-32 origin-top-right shadow-lg border-2 rounded bg-white">
                    <Menu.Item>
                      <DropdownLink className="dropdown-link" href="/profile">
                        profile
                      </DropdownLink>
                    </Menu.Item>
                    <Menu.Item>
                      <DropdownLink className="dropdown-link" href="/orders">
                        orders
                      </DropdownLink>
                    </Menu.Item>
                    <Menu.Item>
                      <a
                        className="dropdown-link"
                        href="/#"
                        onClick={handleLogout}
                      >
                        logout
                      </a>
                    </Menu.Item>
                  </Menu.Items>
                </Menu>
              ) : (
                <Link href="/login">
                  <p className="md:px-2 hidden md:flex text-xs">LOGIN</p>
                </Link>
              )}
            </div>
          </nav>
        </header>
        {title != '404' && (
          <main className="container m-auto mt-4 px-4">{children}</main>
        )}
        {title === '404' && (
          <main className="grid place-items-center text-center h-screen">
            {children}
          </main>
        )}
        <footer className="flex justify-center items-center py-2 shadow-inner">
          <div>ʕ•́ᴥ•̀ʔっ♡</div>
        </footer>
      </div>
    </>
  );
}
